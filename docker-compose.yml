services:
  laravel_cwi_mysql:
    image: mysql:8.0
    container_name: mysql_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: laravel_cwi_api
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_USER: laravel_cwi_api
      MYSQL_PASSWORD: super_secret
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - services_network
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p$$MYSQL_ROOT_PASSWORD",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
  laravel_cwi_phpmyadmin:
    image: phpmyadmin:5.2.1-apache
    container_name: laravel_cwi_phpmyadmin
    restart: unless-stopped
    ports:
      - "8383:80"
    environment:
      PMA_HOST: laravel_cwi_mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: root_password
    depends_on:
      - laravel_cwi_mysql
    networks:
      - services_network
  laravel_cwi_api:
    platform: linux/amd64
    image: laravel_cwi_api:latest
    build:
      context: ./laravel-cwi-api
      args:
        uid: 1000
        user: laravel
    container_name: laravel_cwi_api
    restart: unless-stopped
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_KEY=base64:UKc/6XPzkWHSulAuJ88Yf7JYtyxIsQcspM6Y309HDuM=
      - DB_CONNECTION=mysql
      - DB_HOST=laravel_cwi_mysql
      - DB_PORT=3306
      - DB_DATABASE=laravel_cwi_api
      - DB_USERNAME=laravel_cwi_api
      - DB_PASSWORD=super_secret
    depends_on:
      - laravel_cwi_mysql
    working_dir: /var/www
    volumes:
      - ./:/var/www
    networks:
      - services_network
  laravel_cwi_webserver:
    platform: linux/amd64
    image: nginx:alpine
    container_name: laravel_cwi_webserver
    restart: unless-stopped
    ports:
      - "6162:80"
    depends_on:
      - laravel_cwi_api
    volumes:
      - ./:/var/www
      - ./docker-config/nginx/:/etc/nginx/conf.d
    networks:
      - services_network
  node_ms:
    build:
      context: ./node-ms
    image: node-ms:latest
    container_name: node_ms
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
    ports:
      - "3000:3000"
    networks:
      - services_network

volumes:
  mysql_data:
    driver: local

networks:
  services_network:
    driver: bridge
